#! @ENV@ bash
# vim: ft=sh

set -o pipefail

# functions

source @pkgdatadir@/script-functions

function usage()
{
	cat <<- EOF

	Usage: $me [OPTIONS]

	  -m m4 version
	  -c autoconf version
	  -k automake version
	  -l libtool version
	  -p prefix
	  -e exec-prefix
	  -f extra configure flags
	  -j make jobs
	  -v verbose output
	  -V print version
	  -h print usage

	Examples:

	$me -m 1.4.16 -c 2.68 -k 1.11.1 -l 2.4 -p $HOME/usr

	EOF
} # usage()


me="$(basename $0)"
verbose=''
declare -A version
prefix=''
exec_prefix=''
flags=''
makejobs=''

while getopts 'm:c:k:l:p:e:f:j:vVh' opt; do
  case $opt in
    m ) version[m4]=$OPTARG ;;
    c ) version[autoconf]=$OPTARG ;;
    k ) version[automake]=$OPTARG ;;
    l ) version[libtool]=$OPTARG ;;
    p ) prefix="-p $OPTARG" ;;
    e ) exec_prefix="-e $OPTARG" ;;
    f ) flags="-f $OPTARG" ;;
    j ) makejobs="-j $OPTARG" ;;
    v ) verbose='-v' ;;
    V ) print_version $me; exit 0 ;;
    h ) usage; exit 0 ;;
    \? ) usage >/dev/stderr; exit 1 ;;
  esac
done

shift $(($OPTIND - 1))

for tool in m4 autoconf automake libtool; do

  if [[ -z ${version[$tool]} ]]; then
    continue
  fi

  if ! get-gnu-tool $verbose -g ${version[$tool]} $prefix $exec_prefix $flags \
    $makejobs $tool; then
      die "Failed to install $tool"
  fi

  debug "Successfully installed $tool"
done
